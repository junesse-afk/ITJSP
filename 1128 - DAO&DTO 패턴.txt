[ 모듈화 ]
- 어떤 기능을 담당하는 작은 단위를 모듈(Module) 이라고 함
- 프로그램에서 특정 기능에 따라 작은 단위의 메서드 또는 클래스 형태로
  코드를 작게 분리하는 것을 모듈화라고 함
- 모듈화가 이루어지면 프로그램 유지보수가 간편해짐
  ex) 비행기 날개가 고장나면 날개만 새로 교체 가능(= 날개 모듈)
  ex) 스마트폰 카메라가 고장나면 "카메라 모듈" 교체
=======================================================
[ DAO & DTO 디자인 패턴 ]
- 데이터베이스 관련 작업을 수행하는 어플리케이션에서 대부분 사용되는 패턴
- DB 작업을 처리하는 코드는 DAO 클래스 내의 메서드에서 모두 수행하고
  DB 작업에 사용되는 데이터는 DTO 클래스 내의 멤버변수를 통해 관리하는 패턴

1. DAO(Data Access Object, 데이터 접근 객체)
- 데이터베이스 작업에 필요한 코드만 따로 모아놓은(= 모듈화 한) 클래스(= 객체)
- 데이터베이스 연결 및 해제 작업과 각 SQL 구문을 실행하는 코드를
  DAO 클래스 내의 각각의 메서드를 통해 기술해놓고 외부에서 호출하여 사용하도록 제공
  => 외부에서 DAO 클래스 인스턴스 생성 후 메서드 호출을 통해 데이터베이스 작업 수행
- XXXDAO 클래스명을 사용하여 정의
  => 주로, XXX 은 해당 데이터베이스 작업을 수행하는 테이블명을 사용
     ex) 회원 정보 member 테이블 관련 작업을 수행하는 DAO 클래스 = MemberDAO
         게시물 정보 board 테이블 관련 작업 수행하는 DAO 클래스 = BoardDAO

2. DTO(Data Transfer Object, 데이터 전송 객체)
- 데이터베이스 작업에 필요한 데이터를 보관하는 클래스(= 객체)
- DAO 객체가 데이터베이스 작업을 수행하기 위해 사용할 데이터를 전달하거나,
  DAO 객체로부터 데이터 조회 후 리턴받을 때 변수를 통해 각각의 데이터 관리가 가능하지만
  DTO 객체를 통해 여러 데이터(= 변수)를 하나의 객체(= 묶음)로 관리하고
  전송하는데 활용될 수 있도록 위함
- 데이터베이스 테이블 내의 각 컬럼에 대응하는 멤버변수를 선언하고(private)
  각 멤버변수에 접근하기 위한 Getter/Setter 메서드로 구성됨
  (필요에 따라 생성자도 정의할 수 있으며, 기본 생성자는 관례적으로 무조건 포함)
- XXXDTO 클래스명을 사용하여 정의
  => 주로, XXX 은 해당 데이터베이스 작업을 수행하는 테이블명을 사용
     ex) 회원 정보 member 테이블 관련 DTO 클래스 = MemberDTO
         게시물 정보 board 테이블 관련 DTO 클래스 = BoardDTO
  => 단, JSP 어플리케이션 개발 시에는 XXXDTO 클래스를 XXXBean 클래스 또는
     XXXVO 클래스로 작성하기도 함
     ex) MemberDTO = MemberBean = MemberVO
     => 프로젝트를 수행하는 기업(또는 개발자)의 특성에 따라 다른 이름 사용









  