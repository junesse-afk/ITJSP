package jsp09_servlet;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;

// xxx.test5로 끝나는 모든 서블릿 주소 매핑
@WebServlet("*.test5")
public class TestServlet5 extends HttpServlet {
       
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doProcess(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doProcess(request, response);
	}
	
	protected void doProcess(HttpServletRequest req, HttpServletResponse resp) {
		System.out.println("TestServlet5 - doProcess()");
		
		// 요청 주소가 특정 패턴으로 된 주소일 경우
		// 해당 요청 주소를 판별하여 각각 다른 작업을 수행할 수 있다!
		// 이때, 요청 주소를 추출하기 위해서는 요청 정보를 관리하는 HttpServletRequest 객체의
		// getServletPath() 메서드 호출하여 서블릿 주소를 리턴받아 문자열 비교로 판별!
		String command = req.getServletPath();
		System.out.println("command: " + command);
		// => 브라우저 주소 표시줄의 요청 주소가 "http://localhost:8080/StudyJSP/show.test5" 일때
		//    추출된 서블릿 주소는 "/show.test5" 형태이다
		// => 주소가 "http://localhost:8080/StudyJSP/test/show.test5"
		//    추출된 서블릿 주소는 "/test/show.test5" 형태이다
		// => 즉, 추출되는 서블릿 주소는 전체 URL에서 프로젝트명(= 컨텍스트 루트)까지를 제외한
		//    나머지 주소 부분이 추출된다!
		if (command.equals("/main.test5")) {
			// test5_main.jsp를 보여줌
			
			// 실제 메인페이지 역할을 수행할 뷰페이지(JSP)인 "test5_main.jsp" 페이지를
			// 클라이언트 측으로 응답하려면 해당 파일(페이지)의 내용을 응답데이터로 전송해야함
			// => 이때, 요청 주소는 그대로 유지
			req.set
			
		} else if (command.equals("/list.test5")) {
			// test5_list.jsp를 보여줌
		}
		
		
		
	}
	
	
	
}
