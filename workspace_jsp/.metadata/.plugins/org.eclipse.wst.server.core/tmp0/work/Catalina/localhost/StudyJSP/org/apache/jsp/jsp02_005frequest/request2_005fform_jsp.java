/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-11-20 08:16:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp02_005frequest;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class request2_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("window.onload = function (){\r\n");
      out.write("	document.getElementById(\"btnCheckId\").onclick = onpenCheckHTML;\r\n");
      out.write("    document.getElementById(\"id\").onblur = checkIdLength;\r\n");
      out.write("    \r\n");
      out.write("// 	document.getElementById(\"passwd\").onkeyup = checkPass;\r\n");
      out.write("// 	document.getElementById(\"passwd\").onkeyup = checkSamePass;\r\n");
      out.write("	document.getElementById(\"passwd\").onkeyup = function (){\r\n");
      out.write("		checkPass();\r\n");
      out.write("		checkSamePass();\r\n");
      out.write("	};\r\n");
      out.write("	document.getElementById(\"passwd2\").onkeyup = checkSamePass;\r\n");
      out.write("	document.getElementById(\"jumin1\").onkeyup = checkJumin1;\r\n");
      out.write("	document.getElementById(\"jumin2\").onkeyup = checkJumin2;\r\n");
      out.write("	document.getElementById(\"btnSearchAddress\").onclick = onpenAddr;\r\n");
      out.write("	document.getElementsByName('emailDomain')[0].onchange = changeEmail;\r\n");
      out.write("	document.getElementById(\"checkAllHobby\").onchange = checkAll;\r\n");
      out.write("\r\n");
      out.write("	document.getElementById(\"btnChangeImg\").onclick = chageImg;\r\n");
      out.write("\r\n");
      out.write("	document.joinForm.onsubmit = checkSubmit;\r\n");
      out.write("	\r\n");
      out.write("	// 11. 돌아가기 버튼 클릭 시 이벤트 처리를 통해 이전 페이지로 이동 처리\r\n");
      out.write("	document.querySelector(\"input[value=돌아가기]\").onclick = () => history.back(); \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// ------ functions -------\r\n");
      out.write("function onpenCheckHTML () {\r\n");
      out.write("	// 1. ID 중복확인 버튼 클릭 시 새 창(check_id.html) 띄우기\r\n");
      out.write("	window.open(\"check_id.html\", \"\", \"width=300, height=200\");\r\n");
      out.write("}	\r\n");
      out.write("\r\n");
      out.write("function checkIdLength () {\r\n");
      out.write("	// 2. 아이디 입력란에서 커서가 빠져나갈 때 아이디 길이 체크하기\r\n");
      out.write("	// => 입력된 ID 텍스트의 길이가 4 ~ 8글자 사이일 경우 옆쪽 빈 공간(span 태그 영역)에 \r\n");
      out.write("    // \"사용 가능\" 초록색으로 표시\r\n");
      out.write("    // 아니면, \"4~8글자만 사용 가능합니다\" 빨간색으로 표시\r\n");
      out.write("    let inputId = document.getElementById(\"id\");\r\n");
      out.write("    let span = document.getElementById(\"checkIdResult\");\r\n");
      out.write("\r\n");
      out.write("	if (inputId.value.length >= 4 && inputId.value.length <= 8) {\r\n");
      out.write("		span.innerText = '사용 가능';\r\n");
      out.write("		span.style.color = 'green';\r\n");
      out.write("	} else {\r\n");
      out.write("		span.innerText = '4~8글자만 사용 가능합니다';\r\n");
      out.write("		span.style.color = 'red';\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function checkPass () {\r\n");
      out.write("	// 3. 비밀번호 입력란에 키를 누를때마다 비밀번호 길이 체크하기\r\n");
      out.write("	// => 체크 결과를 비밀번호 입력창 옆쪽 빈 공간(span)에 표시하기\r\n");
      out.write("	// => 비밀번호 길이 체크를 통해 8 ~ 16글자 사이이면 \"사용 가능한 패스워드\"(파란색) 표시,\r\n");
      out.write("	//    아니면, \"사용 불가능한 패스워드\"(빨간색) 표시\r\n");
      out.write("	let inputPass = document.getElementById(\"passwd\");\r\n");
      out.write("	let span = document.getElementById(\"checkPasswdResult\");\r\n");
      out.write("	if (inputPass.value.length >= 8 && inputPass.value.length <= 16) {\r\n");
      out.write("		span.innerText = '사용 가능한 패스워드';\r\n");
      out.write("		span.style.color = 'blue';\r\n");
      out.write("	} else {\r\n");
      out.write("		span.innerText = '사용 불가능한 패스워드';\r\n");
      out.write("		span.style.color = 'red';\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function checkSamePass () {\r\n");
      out.write("	// 4. 비밀번호확인 입력란에 키를 누를때마다 비밀번호와 같은지 체크하기\r\n");
      out.write("	// => 체크 결과를 비밀번호확인 입력창 옆쪽 빈 공간(span)에 표시하기\r\n");
      out.write("	// => 비밀번호와 비밀번호확인 입력 내용이 같으면 \"비밀번호 일치\"(파란색) 표시,\r\n");
      out.write("	//    아니면, \"비밀번호 불일치\"(빨간색) 표시\r\n");
      out.write("	let inputPass = document.getElementById(\"passwd\");\r\n");
      out.write("	let inputPass2 = document.getElementById(\"passwd2\");\r\n");
      out.write("	let span = document.getElementById(\"checkPasswd2Result\");\r\n");
      out.write("	\r\n");
      out.write("	if (inputPass.value == inputPass2.value) {\r\n");
      out.write("		span.innerText = '비밀번호 일치';\r\n");
      out.write("		span.style.color = 'blue';\r\n");
      out.write("	} else {\r\n");
      out.write("		span.innerText = '비밀번호 불일치';\r\n");
      out.write("		span.style.color = 'red';\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//5. 주민번호 숫자 입력할때마다 길이 체크하기\r\n");
      out.write("// => 주민번호 앞자리 입력란에 입력된 숫자가 6자리이면 뒷자리 입력란으로 커서 이동시키기\r\n");
      out.write("// => 주민번호 뒷자리 입력란에 입력된 숫자가 7자리이면 뒷자리 입력란에서 커서 제거하기\r\n");
      out.write("function checkJumin1 () {\r\n");
      out.write("	let jumin1 = document.getElementById(\"jumin1\");\r\n");
      out.write("	if (jumin1.value.length == 6) {\r\n");
      out.write("		document.getElementById(\"jumin2\").focus();	\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("function checkJumin2 () {\r\n");
      out.write("	let jumin2 = document.getElementById(\"jumin2\");\r\n");
      out.write("	if (jumin2.value.length == 7) {\r\n");
      out.write("		document.getElementById(\"jumin2\").blur();\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function onpenAddr () {\r\n");
      out.write("	// 6. 주소검색 버튼 클릭 시 search_address.html 페이지를 새 창에 표시하기\r\n");
      out.write("	window.open(\"search_address.html\", \"\", \"width=500, height=500\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function changeEmail () {\r\n");
      out.write("	// 7. 이메일 도메인 선택 셀렉트 박스 항목 변경 시 \r\n");
      out.write("	//    선택된 셀렉트 박스 값을 이메일 두번째 항목(@ 기호 뒤)에 표시하기\r\n");
      out.write("	//    단, \"직접입력\" 선택 시 표시된 도메인 삭제하기\r\n");
      out.write("	//    또한, \"직접입력\" 항목 외의 도메인 선택 시 도메인 입력창을 잠금처리 및 회색으로 변경하고,\r\n");
      out.write("	//    \"직접입력\" 항목 선택 시 도메인 입력창에 커서 요청 및 잠금 해제  \r\n");
      out.write("	let selectedEmail = document.getElementsByName('emailDomain')[0].value;\r\n");
      out.write("	let email2 = document.joinForm.email2;\r\n");
      out.write("	email2.value = selectedEmail;\r\n");
      out.write("	\r\n");
      out.write("	if (selectedEmail == \"\") { // 직접입력 선택\r\n");
      out.write("		email2.focus();	\r\n");
      out.write("		email2.readOnly = false;\r\n");
      out.write("		email2.style.background = \"\";\r\n");
      out.write("	} else {\r\n");
      out.write("		email2.readOnly = true;\r\n");
      out.write("		email2.style.background = \"#e5e5e5\";\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function checkAll () {\r\n");
      out.write("	// 8. 취미의 \"전체선택\" 체크박스 체크 시 취미 항목 모두 체크, \r\n");
      out.write("	//    \"전체선택\" 해제 시 취미 항목 모두 체크 해제하기\r\n");
      out.write("	let cbAll = document.getElementById(\"checkAllHobby\");\r\n");
      out.write("	let checked = cbAll.checked;\r\n");
      out.write("	let hobbyArr = document.getElementsByName('hobby');\r\n");
      out.write("	for (let hobby of hobbyArr) {\r\n");
      out.write("		hobby.checked = checked;	\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function chageImg () {\r\n");
      out.write("	// 9. 이미지변경 버튼 클릭 시 사진 교체하기\r\n");
      out.write("	document.getElementsByTagName(\"img\")[0].src = '../images/rabbit.png'\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function checkSubmit () {\r\n");
      out.write("	// 10. 가입(submit) 클릭 시 이벤트 처리를 통해\r\n");
      out.write("	//    이름, 아이디, 비밀번호, 비밀번호확인, 주민번호, 주소, Email, 직업, 성별, 취미, 가입동기 항목을\r\n");
      out.write("	//    모두 입력했는지 체크하고 모든 항목이 입력되었을 경우에만 submit 동작이 수행되도록 처리\r\n");
      out.write("	//    입력되지 않은 항목이 있을 경우 해당 항목을 입력하도록 경고창 출력 및 해당 항목에 포커스 요청\r\n");
      out.write("	var table = document.getElementsByTagName(\"table\")[0];\r\n");
      out.write("	let trs = table.children[0].children;\r\n");
      out.write("	\r\n");
      out.write("	for (let tr of trs) {\r\n");
      out.write("		let msg = tr.children[0].innerText;\r\n");
      out.write("		let input = tr.children[1].children[0];\r\n");
      out.write("		if (input.value == \"\") {\r\n");
      out.write("			alert(msg + \" 입력 필수!\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	return true;\r\n");
      out.write("}\r\n");
      out.write("// ------------------------\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>	\r\n");
      out.write("	<div align=\"center\">\r\n");
      out.write("		<h1>회원 가입</h1>\r\n");
      out.write("		<form action=\"request2_pro.jsp\" name=\"joinForm\">\r\n");
      out.write("			<table border=\"1\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이름</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"name\" id=\"name\"></td>\r\n");
      out.write("					<td rowspan=\"3\" align=\"center\">\r\n");
      out.write("						<img src=\"profile_img/pengsu.jpg\" width=\"80\" height=\"80\"><br>\r\n");
      out.write("						<input type=\"button\" value=\"이미지변경\" id=\"btnChangeImg\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>아이디</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"id\" id=\"id\" placeholder=\"4 ~ 8글자 사이 입력\">\r\n");
      out.write("						<input type=\"button\" value=\"ID중복확인\" id=\"btnCheckId\">\r\n");
      out.write("						<span id=\"checkIdResult\"></span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>비밀번호</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"password\" name=\"passwd\" id=\"passwd\" placeholder=\"8 ~ 16글자 사이 입력\">\r\n");
      out.write("						<span id=\"checkPasswdResult\"></span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>비밀번호확인</th>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"password\" name=\"passwd2\" id=\"passwd2\">\r\n");
      out.write("						<span id=\"checkPasswd2Result\"></span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>주민번호</th>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"text\" name=\"jumin1\" id=\"jumin1\" size=\"8\"> -\r\n");
      out.write("						<input type=\"text\" name=\"jumin2\" id=\"jumin2\" size=\"8\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>주소</th>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"text\" name=\"postCode\" id=\"postCode\" size=\"6\">\r\n");
      out.write("						<input type=\"button\" value=\"주소검색\" id=\"btnSearchAddress\">\r\n");
      out.write("						<br>\r\n");
      out.write("						<input type=\"text\" name=\"address1\" id=\"address1\" size=\"30\" placeholder=\"기본주소\">\r\n");
      out.write("						<br>\r\n");
      out.write("						<input type=\"text\" name=\"address2\" id=\"address2\" size=\"30\" placeholder=\"상세주소\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>E-Mail</th>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"text\" name=\"email1\" size=\"10\"> @\r\n");
      out.write("						<input type=\"text\" name=\"email2\" size=\"10\">\r\n");
      out.write("						<select name=\"emailDomain\">\r\n");
      out.write("							<option value=\"\">직접입력</option>\r\n");
      out.write("							<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("							<option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("							<option value=\"nate.com\">nate.com</option>\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>직업</th>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<select name=\"job\">\r\n");
      out.write("							<option value=\"\">항목을 선택하세요</option>\r\n");
      out.write("							<option value=\"개발자\">개발자</option>\r\n");
      out.write("							<option value=\"DB엔지니어\">DB엔지니어</option>\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>성별</th>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"M\">남\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"F\">여\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>취미</th>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"checkbox\" name=\"hobby\" value=\"여행\">여행\r\n");
      out.write("						<input type=\"checkbox\" name=\"hobby\" value=\"독서\">독서\r\n");
      out.write("						<input type=\"checkbox\" name=\"hobby\" value=\"게임\">게임\r\n");
      out.write("						<input type=\"checkbox\" id=\"checkAllHobby\">전체선택\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>가입동기</th>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<textarea rows=\"5\" cols=\"40\" name=\"motivation\"></textarea>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"3\" align=\"center\">\r\n");
      out.write("						<input type=\"submit\" value=\"가입\">\r\n");
      out.write("						<input type=\"reset\" value=\"초기화\">\r\n");
      out.write("						<input type=\"button\" value=\"돌아가기\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
